@use '../utilities/colors' as *;

.characteristics {
	display: flex;
	flex-direction: column;
	justify-content: center;
	align-items: center;
	width: 100%;
	padding-top: 0;
	background: $fourth-section-gradient;
	color: white;
	z-index: 50;
	overflow: hidden;
  
	.characteristics-ctn {
		display: flex;
		flex-direction: column;
		align-items: center;
		gap: 6rem;
		img {
      max-width: 24rem;
		}

		.characteristics-items {
			display: grid;
			grid-template-columns: repeat(1, 1fr);
			text-align: center;
			gap: 3rem;

			.characteristics-item {
				display: flex;
				flex-direction: column;
				gap: 1rem;
				padding: 0.5rem;
				.item-heading {
					font-size: 1.8rem;
				}
				.item-desc {
					font-size: 1.5rem;
					color: rgb(168, 168, 168);
				}
			}
		}
	}
}

@media (min-width: 768px) {
	.characteristics {
		.characteristics-ctn {
			.characteristics-items {
				grid-template-columns: repeat(2, 1fr);
			}
		}
	}
}

@media (min-width: 992px) {
	.characteristics {
    position: fixed;
    top: 5rem;
		height: calc(100vh - 5rem);
		width: 100%;
		padding: 0;
    transform: translateX(100%);
		.characteristics-ctn {
			pointer-events: none;
			img {
				max-height: 35vh;
			}

			.characteristics-items {
				top: 50%;
				left: 50%;
				transform: translate(-50%, -50%);
				height: 70vh;
				width: 90%;
				position: absolute;
				.characteristics-item {
					position: absolute;
					max-width: 35rem;
					padding: 2rem;
					transform: translateX(var(--transform-x))
						translateY(var(--transform-y));
					.item-desc {
						color: rgb(168, 168, 168);
						font-size: 1.2rem;
					}
				}
				.characteristics-item:nth-child(1) {
					right: 0;
					bottom: 0;
				}
				.characteristics-item:nth-child(2) {
					
					right: 0;
				}
				.characteristics-item:nth-child(3) {
					top: 0;
					
				}
				.characteristics-item:nth-child(4) {
					bottom: 0;
				}
				.reset-pos {
					animation: resetPos 0.3s forwards;
				}

				@keyframes resetPos {
					from {
						transform: translateX(var(--transform-x))
							translateY(var(--transform-y));
					}

					to {
						transform: translateX(0) translateY(0);
					}
				}

				.add-pos {
					animation: addPos 0.3s forwards;
				}

				@keyframes addPos {
					from {
						transform: translateX(0) translateY(0);
					}
					to {
						transform: translateX(var(--transform-x))
							translateY(var(--transform-y));
					}
				}
			}
		}
		.section__heading {
			display: none;
		}
	}
}
@media (min-width: 1400px) {
	.characteristics {
		.characteristics-ctn {
			.characteristics-items {
				width: 80%;
			}
		}
	}
}

.quick-fix {
	margin-top: 1px;
}

.characteristics.quick-fix::before {
	content: '';
	position: absolute;
	height: 100%;
	width: 2px;
	background-color: white;
	left: 2px;
}
